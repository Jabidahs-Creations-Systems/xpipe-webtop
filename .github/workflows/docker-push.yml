name: Docker Push

on:
  push:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[release]') || contains(github.event.head_commit.message, '[stage]')
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set variables
        run: |
          XPIPE_VERSION=$(cat "${{ github.workspace }}/${{ contains(github.event.head_commit.message, '[release]') == true && 'version-main' || 'version-ptb' }}")
          echo "XPIPE_VERSION=$XPIPE_VERSION" >> $GITHUB_ENV
          XPIPE_REPOSITORY=${{ contains(github.event.head_commit.message, '[release]') == true && 'xpipe-io/xpipe' || 'xpipe-io/xpipe-ptb' }}
          echo "XPIPE_REPOSITORY=$XPIPE_REPOSITORY" >> $GITHUB_ENV
          XPIPE_PACKAGE=${{ contains(github.event.head_commit.message, '[release]') == true && 'xpipe' || 'xpipe-ptb' }}
          echo "XPIPE_PACKAGE=$XPIPE_PACKAGE" >> $GITHUB_ENV
          XPIPE_TAG=${{ contains(github.event.head_commit.message, '[release]') == true && 'main' || 'ptb' }}
          echo "XPIPE_TAG=$XPIPE_TAG" >> $GITHUB_ENV

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.vendor=xpipe.io
            org.opencontainers.image.authors=xpipe.io
            org.opencontainers.image.documentation=https://github.com/xpipe-io/xpipe-webtop
          flavor: |
            latest=${{ contains(github.event.head_commit.message, '[release]') == true }}
          tags: |
            type=raw,value=${{ env.XPIPE_TAG }}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            "XPIPE_VERSION=${{ env.XPIPE_VERSION }}"
            "XPIPE_REPOSITORY=${{ env.XPIPE_REPOSITORY }}"
            "XPIPE_PACKAGE=${{ env.XPIPE_PACKAGE }}"
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

